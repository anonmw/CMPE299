$date
	Thu Nov 10 10:30:08 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_fixed_int16_tb $end
$var wire 16 ! result_out [15:0] $end
$var reg 16 " A_in [15:0] $end
$var reg 16 # B_in [15:0] $end
$var reg 1 $ CLK $end
$var reg 1 % RST $end
$scope module adder $end
$var wire 16 & A_in [15:0] $end
$var wire 16 ' B_in [15:0] $end
$var wire 1 ( sign_out $end
$var wire 1 ) overflow $end
$var wire 15 * num_out [14:0] $end
$var wire 15 + diff [14:0] $end
$var wire 1 , b_sign $end
$var wire 15 - b_num [14:0] $end
$var wire 15 . b_minus_a [14:0] $end
$var wire 16 / alu_out [15:0] $end
$var wire 1 0 a_sign $end
$var wire 16 1 a_plus_b [15:0] $end
$var wire 15 2 a_num [14:0] $end
$var wire 15 3 a_minus_b [14:0] $end
$var wire 1 4 a_bigger $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
04
b0 3
b0 2
b0 1
00
b0 /
b0 .
b0 -
0,
b0 +
b0 *
0)
0(
b0 '
b0 &
0%
0$
b0 #
b0 "
b0 !
$end
#3
1%
#5
1$
#8
0%
#10
0$
#12
b111111111111111 !
b111111111111111 /
b111111111111111 *
1)
b100000000000000 -
b0 3
b0 .
b1000000000000000 1
04
b100000000000000 2
b100000000000000 #
b100000000000000 '
b100000000000000 "
b100000000000000 &
#15
1$
#20
0$
#22
b1111111111111111 !
b1111111111111111 /
1(
1,
10
b1100000000000000 #
b1100000000000000 '
b1100000000000000 "
b1100000000000000 &
#25
1$
#30
0$
#32
b1010000000000000 !
b1010000000000000 /
b10000000000000 *
0)
b10000000000000 +
0,
b10000000000000 3
b110000000000000 .
b110000000000000 1
14
b10000000000000 -
b10000000000000 #
b10000000000000 '
#35
1$
#40
0$
#42
b10000000000000 !
b10000000000000 /
0(
b100000000000000 -
b110000000000000 3
b10000000000000 .
b110000000000000 1
04
b10000000000000 2
b100000000000000 #
b100000000000000 '
b1010000000000000 "
b1010000000000000 &
#45
1$
#50
0$
#52
b1010000000000000 !
b1010000000000000 /
1(
1,
00
b1100000000000000 #
b1100000000000000 '
b10000000000000 "
b10000000000000 &
#55
1$
#60
0$
#62
b10000000000000 !
b10000000000000 /
0(
14
b10000000000000 -
b10000000000000 3
b110000000000000 .
b110000000000000 1
b100000000000000 2
b1010000000000000 #
b1010000000000000 '
b100000000000000 "
b100000000000000 &
#65
1$
#70
0$
#72
b111111111111111 !
b111111111111111 /
b111111111111111 *
b10101010101011 +
0,
04
b101010101010101 -
b101010101010101 3
b10101010101011 .
b111111111111111 1
b10101010101010 2
b101010101010101 #
b101010101010101 '
b10101010101010 "
b10101010101010 &
#75
1$
#80
0$
#82
b10 !
b10 /
b10 *
b0 +
b1 -
b0 3
b0 .
b10 1
b1 2
b1 #
b1 '
b1 "
b1 &
#85
1$
#90
0$
#95
1$
#100
0$
#105
1$
#110
0$
#115
1$
#120
0$
#125
1$
#130
0$
#135
1$
#140
0$
#145
1$
#150
0$
#155
1$
#160
0$
#165
1$
#170
0$
#175
1$
#180
0$
#185
1$
#190
0$
#192
